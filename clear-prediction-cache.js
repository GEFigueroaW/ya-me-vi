// Script para limpiar cache de predicciones y forzar regeneraci√≥n

console.log('üßπ Limpiando cache de predicciones...');

// Limpiar localStorage relacionado con predicciones
const keysToDelete = [];

// Buscar todas las claves relacionadas con predicciones
for (let i = 0; i < localStorage.length; i++) {
    const key = localStorage.key(i);
    if (key && (
        key.includes('yaViPrediccionesIA') ||
        key.includes('yaViCSVHash') ||
        key.includes('yaViSessionId') ||
        key.includes('predicciones')
    )) {
        keysToDelete.push(key);
    }
}

console.log(`üìã Encontradas ${keysToDelete.length} claves de cache a eliminar:`);
keysToDelete.forEach(key => {
    console.log(`  - ${key}`);
    localStorage.removeItem(key);
});

console.log('‚úÖ Cache limpiado completamente');
console.log('üîÑ Las pr√≥ximas predicciones usar√°n el algoritmo MEJORADO');

// Informaci√≥n sobre el nuevo algoritmo
console.log('\nüéØ NUEVO ALGORITMO IMPLEMENTADO:');
console.log('- Basado en an√°lisis real del sorteo 4110');
console.log('- 83% n√∫meros de frecuencia media-alta (posiciones 1-20)');
console.log('- 17% n√∫meros de frecuencia baja (diversidad)');
console.log('- Balance por d√©cadas');
console.log('- An√°lisis de gaps (√∫ltima aparici√≥n)');
console.log('- Personalizaci√≥n por usuario');

alert('‚úÖ Cache de predicciones limpiado. El sistema ahora usar√° el algoritmo MEJORADO basado en patrones reales.');