    function toggleAnalisis() {
      console.log('üìä Toggle an√°lisis clicked');
      const contenido = document.getElementById('contenido-analisis');
      const arrow = document.getElementById('arrow-icon-analisis');
      
      if (!contenido || !arrow) {
        console.error('‚ùå Elementos an√°lisis no encontrados');
        return;
      }
      
      if (contenido.classList.contains('hidden')) {
        // Cerrar otras cajas
        cerrarCajaAleatorias();
        cerrarCajaPredicciones();
        
        // Abrir esta caja
        contenido.classList.remove('hidden');
        arrow.style.transform = 'rotate(180deg)';
        isAnalisisOpen = true;
        console.log('‚úÖ Caja an√°lisis abierta');
        
        // Mostrar estado de carga mientras se generan las proyecciones
        const elementosMelate = document.getElementById('proyeccion-melate');
        const elementosRevancha = document.getElementById('proyeccion-revancha');
        const elementosRevanchita = document.getElementById('proyeccion-revanchita');
        
        if (elementosMelate) elementosMelate.textContent = 'üîÑ Actualizando...';
        if (elementosRevancha) elementosRevancha.textContent = 'üîÑ Actualizando...';
        if (elementosRevanchita) elementosRevanchita.textContent = 'üîÑ Actualizando...';
        
        // Generar proyecciones autom√°ticamente con mejor manejo de errores
        console.log('üîç Verificando funciones de an√°lisis:', {
          suma: typeof window.analizarSumaNumeros === 'function',
          pares: typeof window.analizarParesImpares === 'function',
          decada: typeof window.analizarDecadaPorPosicion === 'function'
        });
        
        // Generar siempre proyecciones frescas al abrir
        try {
          // Primero verificamos si tenemos las funciones de an√°lisis disponibles
          if (window.analizarSumaNumeros && window.analizarParesImpares && window.analizarDecadaPorPosicion) {
            console.log('‚úÖ Usando funciones de an√°lisis del m√≥dulo global');
            
            // Refrescar datos hist√≥ricos cada vez que se abre
            if (typeof window.cargarDatosHistoricos === 'function') {
              console.log('üîÑ Recargando datos hist√≥ricos frescos...');
              window.cargarDatosHistoricos('todos')
                .then(datos => {
                  window.datosHistoricos = datos;
                  console.log('‚úÖ Datos hist√≥ricos actualizados correctamente');
                  
                  // Una vez que tenemos datos hist√≥ricos frescos, realizar an√°lisis
                  if (window.datosHistoricos) {
                    // Realizar los an√°lisis usando las funciones del m√≥dulo
                    const sumAnalisis = window.analizarSumaNumeros(window.datosHistoricos);
                    const paresAnalisis = window.analizarParesImpares(window.datosHistoricos);
                    const decadaAnalisis = window.analizarDecadaPorPosicion(window.datosHistoricos);
                    
                    // Agregar los an√°lisis a los datos
                    window.datosHistoricos.sumAnalisis = sumAnalisis;
                    window.datosHistoricos.paresAnalisis = paresAnalisis;
                    window.datosHistoricos.decadaAnalisis = decadaAnalisis;
                  }
                  
                  // Generar proyecciones con los datos frescos
                  generarProyeccionesFrescas();
                })
                .catch(error => {
                  console.error('‚ùå Error recargando datos hist√≥ricos:', error);
                  generarProyeccionesFrescas(); // Intentar con los datos que ya tenemos
                });
            } else {
              // Si no podemos recargar, usar los datos existentes
              if (window.datosHistoricos) {
                // Realizar los an√°lisis usando las funciones del m√≥dulo
                const sumAnalisis = window.analizarSumaNumeros(window.datosHistoricos);
                const paresAnalisis = window.analizarParesImpares(window.datosHistoricos);
                const decadaAnalisis = window.analizarDecadaPorPosicion(window.datosHistoricos);
                
                // Agregar los an√°lisis a los datos
                window.datosHistoricos.sumAnalisis = sumAnalisis;
                window.datosHistoricos.paresAnalisis = paresAnalisis;
                window.datosHistoricos.decadaAnalisis = decadaAnalisis;
              }
              
              generarProyeccionesFrescas();
            }
          } else {
            generarProyeccionesFrescas();
          }
        } catch (error) {
          console.error('‚ùå Error en an√°lisis:', error);
          generarProyeccionesFrescas(); // Intentar de todos modos
        }
        
        // Funci√≥n interna para generar proyecciones frescas
        function generarProyeccionesFrescas() {
          // Continuamos con la generaci√≥n de proyecciones
          const fnProyecciones = window.generarProyeccionesAnalisis || generarProyeccionesAnalisis;
          
          if (fnProyecciones) {
            console.log('üîÑ Generando proyecciones de an√°lisis frescas...');
            // Ejecutar inmediatamente para mejor respuesta
            fnProyecciones().catch(error => {
              console.error('‚ùå Error en proyecciones de an√°lisis:', error);
              // Actualizar interfaz con error
              ['melate', 'revancha', 'revanchita'].forEach(sorteo => {
                const elem = document.getElementById(`proyeccion-${sorteo}`);
                const detalle = document.getElementById(`detalle-${sorteo}`);
                if (elem) elem.textContent = 'Error al generar';
                if (detalle) detalle.textContent = 'Intente nuevamente';
              });
            });
          } else {
            console.error('‚ùå funci√≥n generarProyeccionesAnalisis no est√° disponible');
            // Actualizar interfaz con error
            ['melate', 'revancha', 'revanchita'].forEach(sorteo => {
              const elem = document.getElementById(`proyeccion-${sorteo}`);
              const detalle = document.getElementById(`detalle-${sorteo}`);
              if (elem) elem.textContent = 'Sistema no disponible';
              if (detalle) detalle.textContent = 'Recargue la p√°gina';
            });
          }
        }
      } else {
        // Cerrar esta caja
        contenido.classList.add('hidden');
        arrow.style.transform = 'rotate(0deg)';
        isAnalisisOpen = false;
        console.log('‚úÖ Caja an√°lisis cerrada');
      }
    }
