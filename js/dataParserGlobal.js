// === dataParserGlobal.js ===
// M√≥dulo de compatibilidad para exponer funciones de dataParser.js globalmente
// Facilita el uso de funciones de an√°lisis en archivos HTML sin m√≥dulos ES6

// Importar las funciones del m√≥dulo principal
import { analizarSumaNumeros, analizarParesImpares } from './dataParser.js';
import { generarPrediccionPorFrecuencia } from './dataParser.js';

// Exponer las funciones globalmente para que est√©n disponibles en el contexto global
// y puedan ser usadas desde archivos HTML sin necesidad de import/export
window.analizarSumaNumeros = analizarSumaNumeros;
window.analizarParesImpares = analizarParesImpares;
window.generarPrediccionPorFrecuencia = generarPrediccionPorFrecuencia;

// Intentar importar la funci√≥n analizarDecadaPorPosicion
// Esta funci√≥n puede no estar exportada correctamente en dataParser.js
try {
  // Importaci√≥n din√°mica como alternativa
  import('./dataParser.js').then(module => {
    if (module.analizarDecadaPorPosicion) {
      window.analizarDecadaPorPosicion = module.analizarDecadaPorPosicion;
      console.log('‚úÖ Funci√≥n analizarDecadaPorPosicion importada correctamente');
    } else {
      console.warn('‚ö†Ô∏è La funci√≥n analizarDecadaPorPosicion no est√° disponible para exportaci√≥n');
      
      // Implementar una versi√≥n alternativa si no est√° disponible
      window.analizarDecadaPorPosicion = function(datos) {
        console.log('üîÑ Usando versi√≥n alternativa de analizarDecadaPorPosicion');
        // Esta es una implementaci√≥n m√≠nima basada en la original
        const decadas = ['1-10', '11-20', '21-30', '31-40', '41-50', '51-56'];
        const posiciones = [0,1,2,3,4,5];
        const nombresPos = ['1er N√∫mero','2do N√∫mero','3er N√∫mero','4to N√∫mero','5to N√∫mero','6to N√∫mero'];
        const resultado = {};
        
        Object.entries(datos).forEach(([sorteo, datosIndividuales]) => {
          if (!datosIndividuales || !datosIndividuales.sorteos) return;
          
          const decadasPorPosicion = posiciones.map(pos => {
            // Contar frecuencias de d√©cada para esta posici√≥n
            const cuenta = { '1-10':0, '11-20':0, '21-30':0, '31-40':0, '41-50':0, '51-56':0 };
            datosIndividuales.sorteos.forEach(sorteoData => {
              const num = sorteoData.numeros[pos];
              if (num <= 10) cuenta['1-10']++;
              else if (num <= 20) cuenta['11-20']++;
              else if (num <= 30) cuenta['21-30']++;
              else if (num <= 40) cuenta['31-40']++;
              else if (num <= 50) cuenta['41-50']++;
              else cuenta['51-56']++;
            });
            
            // Buscar la d√©cada m√°s frecuente
            let decadaMasFrecuente = '1-10', max = 0;
            for (const d of decadas) {
              if (cuenta[d] > max) { decadaMasFrecuente = d; max = cuenta[d]; }
            }
            
            return {
              posicion: nombresPos[pos],
              decadaMasFrecuente,
              frecuencia: max
            };
          });
          
          // Mensaje clave din√°mico
          let datoClave = '';
          if (sorteo === 'melate') {
            datoClave = 'Los datos muestran una clara progresi√≥n: la d√©cada 1-10 es la m√°s frecuente para el 1er n√∫mero, la 11-20 para el 2do, y as√≠ sucesivamente.';
          } else if (sorteo === 'revancha') {
            datoClave = 'La tendencia es muy similar a Melate. Las d√©cadas listadas son las m√°s frecuentes para cada posici√≥n.';
          } else if (sorteo === 'revanchita') {
            datoClave = 'Revanchita confirma la inclinaci√≥n de las d√©cadas por posici√≥n.';
          }
          
          resultado[sorteo] = { decadasPorPosicion, datoClave };
        });
        
        return resultado;
      };
    }
  }).catch(error => {
    console.error('‚ùå Error al importar analizarDecadaPorPosicion:', error);
    // Implementar versi√≥n alternativa aqu√≠ si falla la importaci√≥n
  });
} catch (error) {
  console.error('‚ùå Error en la importaci√≥n din√°mica:', error);
}

// Confirmar que las funciones est√°n disponibles
console.log('‚úÖ dataParserGlobal.js cargado correctamente');
console.log('üìä Funciones de an√°lisis disponibles globalmente:');
console.log('  - analizarSumaNumeros');
console.log('  - analizarParesImpares');
console.log('  - analizarDecadaPorPosicion');
console.log('  - generarPrediccionPorFrecuencia');
